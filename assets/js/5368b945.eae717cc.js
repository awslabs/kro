"use strict";(self.webpackChunkkro_docs=self.webpackChunkkro_docs||[]).push([[79],{6584:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"docs/overview","title":"What is KRO?","description":"KRO (Kube Resource Orchesrtator) is an open-source project that allows you","source":"@site/docs/docs/overview.md","sourceDirName":"docs","slug":"/docs/overview","permalink":"/docs/docs/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/docs/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","next":{"title":"Getting started","permalink":"/docs/category/getting-started"}}');var r=s(4848),o=s(8453);const i={sidebar_position:1},a="What is KRO?",c={},l=[{value:"Developer interface",id:"developer-interface",level:3},{value:"ResourceGroup",id:"resourcegroup",level:3},{value:"ResourceGroup Instance",id:"resourcegroup-instance",level:3},{value:"Manage any group of resources as one unit",id:"manage-any-group-of-resources-as-one-unit",level:3},{value:"Collaborate",id:"collaborate",level:3},{value:"Standardize",id:"standardize",level:3}];function d(e){const n={a:"a",em:"em",h1:"h1",h3:"h3",header:"header",img:"img",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"what-is-kro",children:"What is KRO?"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"KRO"})," (Kube Resource Orchesrtator) is an open-source project that allows you\nto define custom ",(0,r.jsx)(n.strong,{children:"Kubernetes APIs"})," using simple and straightforward\nconfiguration. With KRO, you can easily configure new custom APIs that create a\ngroup of Kubernetes objects and the logical operations between them. KRO\nautomatically calculates the order in which objects should be created. You can\npass values from one object to another, set default values for fields in the API\nspecification, and incorporate conditionals into your custom API definitions.\nEnd users can easily call these custom APIs to create grouped resources."]}),"\n",(0,r.jsx)(n.h1,{id:"how-does-kro-work",children:"How does KRO work?"}),"\n",(0,r.jsx)(n.h3,{id:"developer-interface",children:"Developer interface"}),"\n",(0,r.jsxs)(n.p,{children:["When the end user applies a YAML spec to the cluster using the ",(0,r.jsx)(n.strong,{children:"Custom API"}),",\nthe API creates a set of resources within the cluster. These resources can\ninclude both ",(0,r.jsx)(n.strong,{children:"native Kubernetes"})," resources and any ",(0,r.jsx)(n.strong,{children:"Custom Resource\nDefinitions (CRDs)"})," installed in the cluster. Some of these resources may\ncreate additional resources outside of your cluster."]}),"\n",(0,r.jsxs)(n.p,{children:["As depicted in the following diagram, the Developers call the Custom API, which\ncreates resources such as the ",(0,r.jsx)(n.strong,{children:"Deployment"}),", ",(0,r.jsx)(n.strong,{children:"Ingress"}),", ",(0,r.jsx)(n.strong,{children:"ServiceAccount"}),",\n",(0,r.jsx)(n.strong,{children:"Prometheus Monitor"}),", ",(0,r.jsx)(n.strong,{children:"IAM Role"}),", ",(0,r.jsx)(n.strong,{children:"IAM Policy"}),", and ",(0,r.jsx)(n.strong,{children:"Amazon S3 Bucket"}),".\nThis allows the Developers to easily manage and deploy their applications in a\nstandardized and streamlined manner."]}),"\n",(0,r.jsx)("div",{align:"center",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"End user interface - Custom API",src:s(2370).A+"",width:"1833",height:"978"}),"\n",(0,r.jsx)(n.em,{children:"Fugure 1: End user interface - Custom API"})]})}),"\n",(0,r.jsx)(n.h3,{id:"resourcegroup",children:"ResourceGroup"}),"\n",(0,r.jsxs)(n.p,{children:["When you install ",(0,r.jsx)(n.strong,{children:"Kro"})," in your cluster, it installs a Custom Resource\nDefinition (CRD) called ",(0,r.jsx)(n.strong,{children:"ResourceGroup (RG)"}),". The ",(0,r.jsx)(n.strong,{children:"Platform"}),", ",(0,r.jsx)(n.strong,{children:"Security"}),",\nand ",(0,r.jsx)(n.strong,{children:"Compliance"})," teams, can collaborate to create custom APIs by defining\nCustom Resources for the ResourceGroup CRD."]}),"\n",(0,r.jsxs)(n.p,{children:["In the depicted example, the ",(0,r.jsx)(n.strong,{children:"Platform Team"})," has created an ",(0,r.jsx)(n.strong,{children:"Application\nStack RG"})," that encapsulates the necessary resources, along with any additional\nlogic, abstractions, and security best practices. This empowers the Developers\nto interact with an API when managing their applications. The Developers no\nlonger need to directly manage the underlying infrastructure complexities, as\nthe custom API handles the deployment and configuration of the required\nresources."]}),"\n",(0,r.jsx)("div",{align:"center",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"Platform Team Interface",src:s(1192).A+"",width:"2430",height:"1464"}),"\n",(0,r.jsx)(n.em,{children:"Fugure 2: ResourceGroup (RG) - Platform Team Interface"})]})}),"\n",(0,r.jsx)(n.h3,{id:"resourcegroup-instance",children:"ResourceGroup Instance"}),"\n",(0,r.jsxs)(n.p,{children:["Developer teams can create multiple instances of the ",(0,r.jsx)(n.strong,{children:"Application Stack"}),", each\ntailored to their specific requirements. As shown, ",(0,r.jsx)(n.strong,{children:"Dev Team A"})," and ",(0,r.jsx)(n.strong,{children:"Dev Team\nB"})," have both instantiated their own Application Stacks. While the underlying\nresources are similar, ",(0,r.jsx)(n.strong,{children:"Dev Team A"})," has chosen to expose their service\nexternally, leveraging the Ingress option, while ",(0,r.jsx)(n.strong,{children:"Dev Team B"})," has opted to\nkeep their service internal to the cluster. This flexibility allows each\ndevelopment team to customize their application stack based on their specific\nrequirements."]}),"\n",(0,r.jsx)("div",{align:"center",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"ResourceGroup Instance",src:s(2904).A+"",width:"2436",height:"2307"}),"\n",(0,r.jsx)(n.em,{children:"Fugure 3: ResourceGroup Instance (RGI)"})]})}),"\n",(0,r.jsx)(n.h1,{id:"why-kro",children:"Why KRO?"}),"\n",(0,r.jsx)(n.h3,{id:"manage-any-group-of-resources-as-one-unit",children:"Manage any group of resources as one unit"}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.strong,{children:"KRO"}),", the ",(0,r.jsx)(n.strong,{children:"Platform Team"})," can enable Developer teams to quickly\ndeploy and manage applications and their dependencies as one unit, handling the\nentire lifecycle from deployment to maintenance. The new APIs integrate\nseamlessly with developers' existing CD tools, preserving familiar processes and\ninterfaces to simplify adoption."]}),"\n",(0,r.jsx)(n.h3,{id:"collaborate",children:"Collaborate"}),"\n",(0,r.jsxs)(n.p,{children:["Transform ",(0,r.jsx)(n.strong,{children:"Kubernetes"})," into your unified platform configuration framework\nusing ",(0,r.jsx)(n.strong,{children:"KRO"}),". Platform, Compliance, and Security teams work together to develop\nAPIs that standardize and streamline configurations, making it easier for\nDeveloper teams to adopt secure, compliant practices. This collaboration lets\nyou build your organizational standards directly into the APIs, ensuring every\napplication deployment aligns with security and compliance requirements without\nadding complexity for developers."]}),"\n",(0,r.jsx)(n.h3,{id:"standardize",children:"Standardize"}),"\n",(0,r.jsx)(n.p,{children:"By creating unified APIs, you can define and enforce best practices across all\nenvironments, ensuring every application meets organizational requirements and\nachieving consistency across deployment environments."}),"\n",(0,r.jsx)(n.h1,{id:"community",children:"Community"}),"\n",(0,r.jsxs)(n.p,{children:["We welcome questions, suggestions, and contributions from the community! To get\ninvolved, check out our\n",(0,r.jsx)(n.a,{href:"https://github.com/awslabs/kro/blob/main/CONTRIBUTING.md",children:"contributing guide"}),".\nFor bugs or feature requests, feel free to\n",(0,r.jsx)(n.a,{href:"https://github.com/awslabs/kro/issues",children:"submit an issue"}),". You\u2019re also invited to\njoin our\n",(0,r.jsx)(n.a,{href:"https://github.com/awslabs/kro?tab=readme-ov-file#kro",children:"community meeting"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},2370:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/KRO-Dev-Interface-fd5678326238378842cdac2fc5861848.png"},2904:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/KRO-Instance-3ca3c95acf4a6b41a3cc2563ac2acbcb.png"},1192:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/KRO-Platform-Team-b03b6c07257680295eebfd9f61dc22c5.png"},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(6540);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);