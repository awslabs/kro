"use strict";(self.webpackChunkkro_docs=self.webpackChunkkro_docs||[]).push([[740],{3772:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"docs/concepts/instances","title":"3. Instances","description":"Instances are a fundamental concept in KRO that represent instances of","source":"@site/docs/docs/concepts/15-instances.md","sourceDirName":"docs/concepts","slug":"/docs/concepts/instances","permalink":"/docs/docs/concepts/instances","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/docs/concepts/15-instances.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_position":15},"sidebar":"docsSidebar","previous":{"title":"2. Simple Schema","permalink":"/docs/docs/concepts/simple-schema"},"next":{"title":"4. Collections","permalink":"/docs/docs/concepts/collections"}}');var i=s(4848),a=s(8453);const r={sidebar_position:15},o="3. Instances",c={},l=[{value:"What is an Instance?",id:"what-is-an-instance",level:2},{value:"Anatomy of an Instance",id:"anatomy-of-an-instance",level:2},{value:"The reconciliation loop",id:"the-reconciliation-loop",level:2},{value:"Advantages of declarative management [need better title]",id:"advantages-of-declarative-management-need-better-title",level:2},{value:"Common Status Fields",id:"common-status-fields",level:2},{value:"1. Conditions",id:"1-conditions",level:3},{value:"2. State",id:"2-state",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"3-instances",children:"3. Instances"})}),"\n",(0,i.jsxs)(n.p,{children:["Instances are a fundamental concept in ",(0,i.jsx)(n.strong,{children:"KRO"})," that represent instances of\nResourceGroups. They define the desired state of a set of resources, which KRO\ncontinuously works to maintain."]}),"\n",(0,i.jsx)(n.h2,{id:"what-is-an-instance",children:"What is an Instance?"}),"\n",(0,i.jsx)(n.p,{children:"An Instance is a Kubernetes custom resource that:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"References a specific ResourceGroup"}),"\n",(0,i.jsx)(n.li,{children:"Provides values for the parameters defined in the ResourceGroup"}),"\n",(0,i.jsx)(n.li,{children:"Represents the desired state of a set of Kubernetes resources"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"anatomy-of-an-instance",children:"Anatomy of an Instance"}),"\n",(0,i.jsxs)(n.p,{children:["Here's an example of an Instance for a ",(0,i.jsx)(n.code,{children:"WebApplication"})," ResourceGroup:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: kro.run/v1alpha1\nkind: WebApplication\nmetadata:\n  name: my-web-app\nspec:\n  name: awesome-app\n  replicas: 3\n  image: nginx:latest\n  ports:\n    - port: 80\n      targetPort: 8080\n  env:\n    DB_HOST: mydb.example.com\n    LOG_LEVEL: debug\n"})}),"\n",(0,i.jsxs)(n.admonition,{title:"The spec fields of an Instance correspond to the parameters defined in the",type:"tip",children:[(0,i.jsx)(n.p,{children:"ResourceGroup. :::"}),(0,i.jsx)(n.h2,{id:"the-reconciliation-loop",children:"The reconciliation loop"}),(0,i.jsx)(n.p,{children:"KRO manages Instances through a continuous reconciliation process:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Desired state detection"}),": KRO observes the Instance, which represents the\ndesired state of resources."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Current state assessment"}),": KRO talks to the api-server and checks the\ncurrent state of resources in the cluster related to the Instance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difference identification"}),": Any differences between the desired state\n(Instance) and the current state are identified."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State Reconciliation"}),": KRO takes necessary actions to align the current\nstate with the desired state. This may involve creating, updating, or deleting\nresources as needed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Status Updates"}),": The Instance's status is updated to reflect the current state\nof reconciliation and any issues encountered."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Continuous Loop"}),": This process repeats regularly, ensuring the cluster\nstate always converges towards the desired state defined in the Instance."]}),"\n"]}),(0,i.jsx)(n.h2,{id:"advantages-of-declarative-management-need-better-title",children:"Advantages of declarative management [need better title]"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Declarative Management"}),": Users define what they want, not how to get there."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Self-healing"}),": The system continuously works to maintain the desired state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Idempotency"}),": The same Instance always results in the same end state,\nregardless of the current state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Abstraction"}),": Complex resource relationships are managed behind the scenes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency"}),": All resources for an application are managed as a unit."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Auditability"}),": The Instance serves as a single source of truth for the\napplication's desired state."]}),"\n"]}),(0,i.jsx)(n.admonition,{title:"Best Practices",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Treat instances as declarative definitions of your application's desired state.\nUse version control for your Instances to track changes over time."}),"\n",(0,i.jsx)(n.li,{children:"Leverage labels and annotations in Instances for organization and filtering."}),"\n",(0,i.jsx)(n.li,{children:"Regularly review Instances to ensure they reflect current requirements."}),"\n",(0,i.jsx)(n.li,{children:"Use KRO's dry-run feature to preview reconciliation actions before applying\nchanges to Instances."}),"\n",(0,i.jsx)(n.li,{children:"Monitor Instance statuses to understand the current state of your applications."}),"\n"]})})]}),"\n",(0,i.jsx)(n.h2,{id:"common-status-fields",children:"Common Status Fields"}),"\n",(0,i.jsxs)(n.p,{children:["KRO automatically injects two common fields into the status of all instances:\n",(0,i.jsx)(n.strong,{children:"Conditions"})," and ",(0,i.jsx)(n.strong,{children:"State"}),". These fields provide crucial information about the\ncurrent status of the instance and its associated resources."]}),"\n",(0,i.jsx)(n.h3,{id:"1-conditions",children:"1. Conditions"}),"\n",(0,i.jsx)(n.p,{children:"Conditions are a standard Kubernetes concept that KRO leverages to provide\ndetailed status information. Each condition represents a specific aspect of the\ninstance's state. Common conditions include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ready"}),": Indicates whether the instance is fully reconciled and operational."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Progressing"}),": Shows if the instance is in the process of reaching the desired\nstate."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Degraded"}),": Signals that the instance is operational but not functioning\noptimally."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error"}),": Indicates that an error has occurred during reconciliation."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each condition typically includes the following properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type"}),': The name of the condition (e.g., "Ready").']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Status"}),': Either "True", "False", or "Unknown".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LastTransitionTime"}),": When the condition last changed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reason"}),": A brief, machine-readable explanation for the condition's state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Message"}),": A human-readable description of the condition."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'status:\n  conditions:\n    - type: Ready\n      status: "True"\n      lastTransitionTime: "2024-07-23T01:01:59Z"\n      reason: ResourcesAvailable\n      message: "All resources are available and configured correctly"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-state",children:"2. State"}),"\n",(0,i.jsx)(n.p,{children:"The State field provides a high-level summary of the instance's current status. It\nis typically one of the following values:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pending"}),": The instance is being processed, but resources are not yet fully\ncreated or configured."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Running"}),": All resources are created and the instance is operational."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Failed"}),": An error occurred and the instance could not be fully reconciled."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Terminating"}),": The instance is in the process of being deleted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Degraded"}),": The instance is operational but not functioning optimally."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unknown"}),": The instance's status cannot be determined."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"status:\n  state: Running\n"})}),"\n",(0,i.jsx)(n.p,{children:"These common status fields provide users with a consistent and informative way\nto check the health and state of their instances across different ResourceGroups.\nThey are essential for monitoring, troubleshooting, and automating operations\nbased on the status of KRO-managed resources."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);