"use strict";(self.webpackChunkkro_docs=self.webpackChunkkro_docs||[]).push([[2],{5701:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"examples/deploymentdbinstance","title":"DeploymentDBInstance","description":"","source":"@site/docs/examples/deploymentdbinstance.md","sourceDirName":"examples","slug":"/examples/deploymentdbinstance","permalink":"/docs/examples/deploymentdbinstance","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/deploymentdbinstance.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"examplesSidebar","previous":{"title":"EKSCluster","permalink":"/docs/examples/ekscluster"}}');var a=s(4848),i=s(8453);const o={sidebar_position:20},r="DeploymentDBInstance",c={},d=[];function p(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"deploymentdbinstance",children:"DeploymentDBInstance"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="deploymentdbinstance-rg.yaml"',children:"apiVersion: kro.run/v1alpha1\nkind: ResourceGroup\nmetadata:\n  name: deploymentandawspostgres\nspec:\n  apiVersion: v1alpha1\n  kind: DeploymentAndAWSPostgres\n\n  # CRD Definition\n  definition:\n    spec:\n      applicationName: string\n      image: string\n      location: string\n\n  # Resources\n  resources:\n    - name: dbinstance\n      definition:\n        apiVersion: rds.saervices.k8s.aws/v1alpha1\n        kind: DBInstance\n        metadata:\n          name: ${schema.spec.applicationName}-dbinstance\n        spec:\n          # need to specify the required fields (e.g masterUsername, masterPassword)\n          engine: postgres\n          dbInstanceIdentifier: ${schema.spec.applicationName}-dbinstance\n          allocatedStorage: 20\n          dbInstanceClass: db.t3.micro\n\n    - name: pod\n      definition:\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: ${schema.spec.applicationName}-pod\n        spec:\n          containers:\n            - name: container1\n              image: ${schema.spec.image}\n              env:\n                - name: POSTGRESS_ENDPOINT\n                  value: ${dbinstance.status.endpoint.address}\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(6540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);