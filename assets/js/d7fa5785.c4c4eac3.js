"use strict";(self.webpackChunksymphony_docs=self.webpackChunksymphony_docs||[]).push([[538],{9867:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var s=t(4848),o=t(8453);const r={sidebar_position:1},a="DeploymentService",i={id:"examples/deploymentservice",title:"DeploymentService",description:"",source:"@site/docs/examples/deploymentservice.md",sourceDirName:"examples",slug:"/examples/deploymentservice",permalink:"/docs/examples/deploymentservice",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/deploymentservice.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"examplesSidebar",previous:{title:"Empty ResourceGroup",permalink:"/docs/examples/empty"},next:{title:"EKSCluster",permalink:"/docs/examples/ekscluster"}},p={},c=[];function m(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"deploymentservice",children:"DeploymentService"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="deploymentservice-rg.yaml"',children:"apiVersion: x.symphony.k8s.aws/v1alpha1\nkind: ResourceGroup\nmetadata:\n  name: deploymentservice.x.symphony.k8s.aws\nspec:\n  apiVersion: v1alpha1\n  kind: DeploymentService\n  definition:\n    spec:\n      name: string\n  resources:\n  - name: deployment\n    definition:\n      apiVersion: apps/v1\n      kind: Deployment\n      metadata:\n        name: ${spec.name}\n      spec:\n        replicas: 1\n        selector:\n          matchLabels:\n            app: deployment\n        template:\n          metadata:\n            labels:\n              app: deployment\n          spec:\n            containers:\n            - name: ${spec.name}-deployment\n              image: nginx\n              ports:\n              - containerPort: 80\n  - name: service\n    definition:\n      apiVersion: v1\n      kind: Service\n      metadata:\n        name: ${spec.name}\n      spec:\n        selector:\n          app: deployment\n        ports:\n        - protocol: TCP\n          port: 80\n          targetPort: 80\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(6540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);