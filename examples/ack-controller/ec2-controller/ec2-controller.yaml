apiVersion: x.symphony.k8s.aws/v1alpha1
kind: ResourceGroup
metadata:
  name: ec2controller.x.symphony.k8s.aws
spec:
  apiVersion: v1alpha1
  kind: EC2Controller
  definition:
    spec:
      name: string | default=ec2-controller
      namespace: string | default=default
      values:
        aws:
          accountID: string | required=true
          region: string | default=us-west-2
        deployment:
          containerPort: integer | default=8080
          replicas: integer | default=1
        iamRole:
          maxSessionDuration: integer | default=3600
          oidcProvider: string | required=true
          roleDescription: string | default=IRSA role for ACK EC2 controller deployement on EKS cluster using Symphony Resource group
        image:
          deletePolicy: string | default=delete
          repository: string | default=public.ecr.aws/aws-controllers-k8s/ec2-controller
          tag: string | default=1.2.27
          resources:
            requests:
              memory: string | default=64Mi
              cpu: string | default=50m
            limits:
              memory: string | default=128Mi
              cpu: string | default=100m
        log:
          enabled: boolean | default=false
          level: string | default=info
        serviceAccount:
          name: string | default=ec2-controller-sa
  resources:
  - name: ec2CRDGroup
    definition:
      apiVersion: x.symphony.k8s.aws/v1alpha1
      kind: EC2CRDGroup
      metadata:
        name: ${spec.name}-crd-group
      spec:
        name: ${spec.name}-crd-group
  - name: ec2ControllerIamRole
    definition:
      apiVersion: iam.services.k8s.aws/v1alpha1
      kind: Role
      metadata:
        name: ${spec.name}-iam-role
        namespace: ${spec.namespace}
      spec:
        name: ${spec.name}-iam-role
        description: ${spec.values.iamRole.roleDescription}
        maxSessionDuration: ${spec.values.iamRole.maxSessionDuration}
        policies:
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        assumeRolePolicyDocument: >
          {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": {"Federated": "arn:aws:iam::${spec.values.aws.accountID}:oidc-provider/${spec.values.iamRole.oidcProvider}"},
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                  "StringEquals": {"${spec.values.iamRole.oidcProvider}:sub": "system:serviceaccount:${spec.namespace}:${spec.values.serviceAccount.name}"}
              }
            }]
          }
  - name: serviceAccount
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: ${spec.values.serviceAccount.name}
        namespace: ${spec.namespace}
        annotations:
          eks.amazonaws.com/role-arn: ${ec2ControllerIamRole.status.ackResourceMetadata.arn}
  - name: deployment
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ${spec.name}-deployment
        namespace: ${spec.namespace}
        labels:
          app.kubernetes.io.name: ${spec.name}-deployment
          app.kubernetes.io.instance: ${spec.name}
      spec:
        replicas: ${spec.values.deployment.replicas}
        selector:
          matchLabels:
            app.kubernetes.io.name: ${spec.name}-deployment
            app.kubernetes.io.instance: ${spec.name}
        template:
          metadata:
            labels:
              app.kubernetes.io.name: ${spec.name}-deployment
              app.kubernetes.io.instance: ${spec.name}
          spec:
            serviceAccountName: ${serviceAccount.metadata.name}
            containers:
            - command:
              - ./bin/controller
              args:
              - --aws-region
              - ${spec.values.aws.region}
              - --enable-development-logging=${spec.values.log.enabled}
              - --log-level
              - ${spec.values.log.level}
              - --deletion-policy
              - ${spec.values.image.deletePolicy}
              - --watch-namespace
              - ${spec.namespace}
              image: ${spec.values.image.repository}:${spec.values.image.tag}
              name: controller
              ports:
                - name: http
                  containerPort: ${spec.values.deployment.containerPort}
              resources:
                requests:
                  memory: ${spec.values.image.resources.requests.memory}
                  cpu: ${spec.values.image.resources.requests.cpu}
                limits:
                    memory: ${spec.values.image.resources.limits.memory}
                    cpu: ${spec.values.image.resources.limits.cpu}
              env:
              - name: ACK_SYSTEM_NAMESPACE
                value: ${spec.namespace}
              - name: AWS_REGION
                value: ${spec.values.aws.region}
              - name: DELETE_POLICY
                value: ${spec.values.image.deletePolicy}
              - name: ACK_LOG_LEVEL
                value: ${spec.values.log.level}              
              ports:
              - containerPort: 80
  - name: clusterRoleBinding
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: ${spec.name}-clusterrolebinding
      roleRef:
        kind: ClusterRole
        apiGroup: rbac.authorization.k8s.io
        name: ${clusterRole.metadata.name}
      subjects:
      - kind: ServiceAccount
        name: ${serviceAccount.metadata.name}
        namespace: ${serviceAccount.metadata.namespace}
  - name: clusterRole
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: ${spec.name}-clusterrole
      rules:
      - apiGroups:
        - ""
        resources:
        - configmaps
        verbs:
        - get
        - list
        - patch
        - watch
      - apiGroups:
        - ""
        resources:
        - namespaces
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ""
        resources:
        - secrets
        verbs:
        - get
        - list
        - patch
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - dhcpoptions
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - dhcpoptions/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - elasticipaddresses
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - elasticipaddresses/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - flowlogs
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - flowlogs/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - instances
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - instances/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - internetgateways
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - internetgateways/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - natgateways
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - natgateways/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - networkacls
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - networkacls/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - routetables
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - routetables/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - securitygroups
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - securitygroups/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - subnets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - subnets/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - transitgateways
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - transitgateways/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - vpcendpoints
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - vpcendpoints/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - vpcendpointserviceconfigurations
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - vpcendpointserviceconfigurations/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - vpcpeeringconnections
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - vpcpeeringconnections/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - vpcs
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ec2.services.k8s.aws
        resources:
        - vpcs/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - services.k8s.aws
        resources:
        - adoptedresources
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - services.k8s.aws
        resources:
        - adoptedresources/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - services.k8s.aws
        resources:
        - fieldexports
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - services.k8s.aws
        resources:
        - fieldexports/status
        verbs:
        - get
        - patch
        - update